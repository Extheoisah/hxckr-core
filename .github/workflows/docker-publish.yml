name: Docker Publish

on:
  push:
    branches: [ "main" ]
  release:
    types: [created]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/hxckr-core
  CARGO_TERM_COLOR: always

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install cargo-chef
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-chef

      - name: Prepare recipe
        run: cargo chef prepare --recipe-path recipe.json

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-chef-${{ hashFiles('**/recipe.json') }}
          restore-keys: |
            ${{ runner.os }}-cargo-chef-

      - name: Build dependencies
        run: cargo chef cook --release --recipe-path recipe.json

      - name: Build project
        run: cargo build --release --all-features

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image (Development)
        if: github.event_name == 'push'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.dev
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:dev
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max

      - name: Build and push Docker image (Production)
        if: github.event_name == 'release'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max

      - name: Run migrations (Production)
        if: github.event_name == 'release'
        env:
          DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}
        run: |
          docker run --rm \
            -e DATABASE_URL \
            ${{ env.IMAGE_NAME }}:${{ github.ref_name }} \
            diesel migration run
